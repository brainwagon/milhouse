State 2 conflicts: 1 reduce/reduce
State 5 conflicts: 1 shift/reduce
State 8 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: gamelist

    2 gamelist: gamelist game
    3         | ε

    4 game: headerlist turns result

    5 headerlist: headerlist header
    6           | ε

    7 header: LBRACK HEADERTAG HEADERSTR RBRACK

    8 result: RESULT
    9       | ε

   10 turns: turnlist endofturnlist

   11 turnlist: turnlist turn
   12         | ε

   13 endofturnlist: halfturn
   14              | ε

   15 turn: movenumber ply ply

   16 halfturn: movenumber ply

   17 movenumber: NUM DOT

   18 ply: move
   19    | capture

   20 move: NUM DASH NUM

   21 capture: capture ECKS NUM
   22        | NUM


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM (258) 17 20 21 22
    LBRACK (259) 7
    RBRACK (260) 7
    HEADERTAG (261) 7
    HEADERSTR (262) 7
    DOT (263) 17
    DASH (264) 20
    RESULT (265) 8
    ECKS (266) 21


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    file (13)
        on left: 1
        on right: 0
    gamelist (14)
        on left: 2 3
        on right: 1 2
    game (15)
        on left: 4
        on right: 2
    headerlist (16)
        on left: 5 6
        on right: 4 5
    header (17)
        on left: 7
        on right: 5
    result (18)
        on left: 8 9
        on right: 4
    turns (19)
        on left: 10
        on right: 4
    turnlist (20)
        on left: 11 12
        on right: 10 11
    endofturnlist (21)
        on left: 13 14
        on right: 10
    turn (22)
        on left: 15
        on right: 11
    halfturn (23)
        on left: 16
        on right: 13
    movenumber (24)
        on left: 17
        on right: 15 16
    ply (25)
        on left: 18 19
        on right: 15 16
    move (26)
        on left: 20
        on right: 18
    capture <i> (27)
        on left: 21 22
        on right: 19 21


State 0

    0 $accept: • file $end

    $default  reduce using rule 3 (gamelist)

    file      go to state 1
    gamelist  go to state 2


State 1

    0 $accept: file • $end

    $end  shift, and go to state 3


State 2

    1 file: gamelist •
    2 gamelist: gamelist • game

    $end      reduce using rule 1 (file)
    $end      [reduce using rule 6 (headerlist)]
    $default  reduce using rule 6 (headerlist)

    game        go to state 4
    headerlist  go to state 5


State 3

    0 $accept: file $end •

    $default  accept


State 4

    2 gamelist: gamelist game •

    $default  reduce using rule 2 (gamelist)


State 5

    4 game: headerlist • turns result
    5 headerlist: headerlist • header

    LBRACK  shift, and go to state 6

    LBRACK    [reduce using rule 12 (turnlist)]
    $default  reduce using rule 12 (turnlist)

    header    go to state 7
    turns     go to state 8
    turnlist  go to state 9


State 6

    7 header: LBRACK • HEADERTAG HEADERSTR RBRACK

    HEADERTAG  shift, and go to state 10


State 7

    5 headerlist: headerlist header •

    $default  reduce using rule 5 (headerlist)


State 8

    4 game: headerlist turns • result

    RESULT  shift, and go to state 11

    RESULT    [reduce using rule 9 (result)]
    $default  reduce using rule 9 (result)

    result  go to state 12


State 9

   10 turns: turnlist • endofturnlist
   11 turnlist: turnlist • turn

    NUM  shift, and go to state 13

    NUM       [reduce using rule 14 (endofturnlist)]
    $default  reduce using rule 14 (endofturnlist)

    endofturnlist  go to state 14
    turn           go to state 15
    halfturn       go to state 16
    movenumber     go to state 17


State 10

    7 header: LBRACK HEADERTAG • HEADERSTR RBRACK

    HEADERSTR  shift, and go to state 18


State 11

    8 result: RESULT •

    $default  reduce using rule 8 (result)


State 12

    4 game: headerlist turns result •

    $default  reduce using rule 4 (game)


State 13

   17 movenumber: NUM • DOT

    DOT  shift, and go to state 19


State 14

   10 turns: turnlist endofturnlist •

    $default  reduce using rule 10 (turns)


State 15

   11 turnlist: turnlist turn •

    $default  reduce using rule 11 (turnlist)


State 16

   13 endofturnlist: halfturn •

    $default  reduce using rule 13 (endofturnlist)


State 17

   15 turn: movenumber • ply ply
   16 halfturn: movenumber • ply

    NUM  shift, and go to state 20

    ply      go to state 21
    move     go to state 22
    capture  go to state 23


State 18

    7 header: LBRACK HEADERTAG HEADERSTR • RBRACK

    RBRACK  shift, and go to state 24


State 19

   17 movenumber: NUM DOT •

    $default  reduce using rule 17 (movenumber)


State 20

   20 move: NUM • DASH NUM
   22 capture: NUM •

    DASH  shift, and go to state 25

    $default  reduce using rule 22 (capture)


State 21

   15 turn: movenumber ply • ply
   16 halfturn: movenumber ply •

    NUM  shift, and go to state 20

    NUM       [reduce using rule 16 (halfturn)]
    $default  reduce using rule 16 (halfturn)

    ply      go to state 26
    move     go to state 22
    capture  go to state 23


State 22

   18 ply: move •

    $default  reduce using rule 18 (ply)


State 23

   19 ply: capture •
   21 capture: capture • ECKS NUM

    ECKS  shift, and go to state 27

    $default  reduce using rule 19 (ply)


State 24

    7 header: LBRACK HEADERTAG HEADERSTR RBRACK •

    $default  reduce using rule 7 (header)


State 25

   20 move: NUM DASH • NUM

    NUM  shift, and go to state 28


State 26

   15 turn: movenumber ply ply •

    $default  reduce using rule 15 (turn)


State 27

   21 capture: capture ECKS • NUM

    NUM  shift, and go to state 29


State 28

   20 move: NUM DASH NUM •

    $default  reduce using rule 20 (move)


State 29

   21 capture: capture ECKS NUM •

    $default  reduce using rule 21 (capture)
